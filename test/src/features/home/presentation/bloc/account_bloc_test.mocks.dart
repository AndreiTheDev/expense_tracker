// Mocks generated by Mockito 5.4.4 from annotations
// in expense_tracker_app_bloc/test/src/features/home/presentation/bloc/account_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:expense_tracker_app_bloc/src/core/error/failures.dart' as _i5;
import 'package:expense_tracker_app_bloc/src/features/home/domain/entities/account.dart'
    as _i6;
import 'package:expense_tracker_app_bloc/src/features/home/domain/entities/expense.dart'
    as _i7;
import 'package:expense_tracker_app_bloc/src/features/home/domain/entities/income.dart'
    as _i10;
import 'package:expense_tracker_app_bloc/src/features/home/domain/entities/transaction.dart'
    as _i12;
import 'package:expense_tracker_app_bloc/src/features/home/domain/usecases/add_expense.dart'
    as _i2;
import 'package:expense_tracker_app_bloc/src/features/home/domain/usecases/add_income.dart'
    as _i9;
import 'package:expense_tracker_app_bloc/src/features/home/domain/usecases/delete_transaction.dart'
    as _i11;
import 'package:expense_tracker_app_bloc/src/features/home/domain/usecases/fetch_account.dart'
    as _i13;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AddExpense].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddExpense extends _i1.Mock implements _i2.AddExpense {
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>> call({
    required String? accountId,
    required _i7.ExpenseEntity? expenseEntity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #accountId: accountId,
            #expenseEntity: expenseEntity,
          },
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #accountId: accountId,
              #expenseEntity: expenseEntity,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #accountId: accountId,
              #expenseEntity: expenseEntity,
            },
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>);
}

/// A class which mocks [AddIncome].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddIncome extends _i1.Mock implements _i9.AddIncome {
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>> call({
    required String? accountId,
    required _i10.IncomeEntity? incomeEntity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #accountId: accountId,
            #incomeEntity: incomeEntity,
          },
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #accountId: accountId,
              #incomeEntity: incomeEntity,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #accountId: accountId,
              #incomeEntity: incomeEntity,
            },
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>);
}

/// A class which mocks [DeleteTransaction].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteTransaction extends _i1.Mock implements _i11.DeleteTransaction {
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>> call({
    required String? accountId,
    required _i12.TransactionEntity? transactionEntity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #accountId: accountId,
            #transactionEntity: transactionEntity,
          },
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #accountId: accountId,
              #transactionEntity: transactionEntity,
            },
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #accountId: accountId,
              #transactionEntity: transactionEntity,
            },
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>);
}

/// A class which mocks [FetchAccount].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchAccount extends _i1.Mock implements _i13.FetchAccount {
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>> call(
          {required String? accountId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#accountId: accountId},
        ),
        returnValue:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {#accountId: accountId},
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>.value(
                _i8.dummyValue<_i4.Either<_i5.Failure, _i6.AccountEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {#accountId: accountId},
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.AccountEntity>>);
}
