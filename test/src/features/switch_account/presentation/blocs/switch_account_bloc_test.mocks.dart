// Mocks generated by Mockito 5.4.4 from annotations
// in expense_tracker_app_bloc/test/src/features/switch_account/presentation/blocs/switch_account_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:expense_tracker_app_bloc/src/core/error/failures.dart' as _i5;
import 'package:expense_tracker_app_bloc/src/features/switch_account/domain/entities/account.dart'
    as _i6;
import 'package:expense_tracker_app_bloc/src/features/switch_account/domain/usecases/create_new_account.dart'
    as _i2;
import 'package:expense_tracker_app_bloc/src/features/switch_account/domain/usecases/fetch_accounts_list.dart'
    as _i8;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CreateNewAccount].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateNewAccount extends _i1.Mock implements _i2.CreateNewAccount {
  @override
  _i3.Future<_i4.Either<_i5.Failure, void>> call(
          {required _i6.AccountEntity? account}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#account: account},
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, void>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, void>>(
          this,
          Invocation.method(
            #call,
            [],
            {#account: account},
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, void>>.value(
                _i7.dummyValue<_i4.Either<_i5.Failure, void>>(
          this,
          Invocation.method(
            #call,
            [],
            {#account: account},
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, void>>);
}

/// A class which mocks [FetchAccountsList].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchAccountsList extends _i1.Mock implements _i8.FetchAccountsList {
  @override
  _i3.Future<_i4.Either<_i5.Failure, List<_i6.AccountEntity>>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i3
            .Future<_i4.Either<_i5.Failure, List<_i6.AccountEntity>>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.AccountEntity>>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
        returnValueForMissingStub: _i3
            .Future<_i4.Either<_i5.Failure, List<_i6.AccountEntity>>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, List<_i6.AccountEntity>>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, List<_i6.AccountEntity>>>);
}
