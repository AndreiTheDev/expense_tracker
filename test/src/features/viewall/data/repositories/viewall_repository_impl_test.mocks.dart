// Mocks generated by Mockito 5.4.4 from annotations
// in expense_tracker_app_bloc/test/src/features/viewall/data/repositories/viewall_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:expense_tracker_app_bloc/src/features/viewall/data/datasources/viewall_firebase_datasource.dart'
    as _i3;
import 'package:expense_tracker_app_bloc/src/features/viewall/data/datasources/viewall_firestore_datasource.dart'
    as _i4;
import 'package:expense_tracker_app_bloc/src/features/viewall/data/dtos/chart.dart'
    as _i2;
import 'package:expense_tracker_app_bloc/src/features/viewall/data/dtos/expense.dart'
    as _i6;
import 'package:expense_tracker_app_bloc/src/features/viewall/data/dtos/income.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChartDto_0 extends _i1.SmartFake implements _i2.ChartDto {
  _FakeChartDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ViewallFirebaseDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockViewallFirebaseDataSourceImpl extends _i1.Mock
    implements _i3.ViewallFirebaseDataSourceImpl {}

/// A class which mocks [ViewallFirestoreDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockViewallFirestoreDataSourceImpl extends _i1.Mock
    implements _i4.ViewallFirestoreDataSourceImpl {
  @override
  _i5.Future<void> deleteExpense(
    String? uid,
    String? accountId,
    _i6.ExpenseDto? expenseDto,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteExpense,
          [
            uid,
            accountId,
            expenseDto,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteIncome(
    String? uid,
    String? accountId,
    _i7.IncomeDto? incomeDto,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteIncome,
          [
            uid,
            accountId,
            incomeDto,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i6.ExpenseDto>> fetchExpensesList(
    String? uid,
    String? accountId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchExpensesList,
          [
            uid,
            accountId,
          ],
        ),
        returnValue: _i5.Future<List<_i6.ExpenseDto>>.value(<_i6.ExpenseDto>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.ExpenseDto>>.value(<_i6.ExpenseDto>[]),
      ) as _i5.Future<List<_i6.ExpenseDto>>);

  @override
  _i5.Future<List<_i7.IncomeDto>> fetchIncomesList(
    String? uid,
    String? accountId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchIncomesList,
          [
            uid,
            accountId,
          ],
        ),
        returnValue: _i5.Future<List<_i7.IncomeDto>>.value(<_i7.IncomeDto>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i7.IncomeDto>>.value(<_i7.IncomeDto>[]),
      ) as _i5.Future<List<_i7.IncomeDto>>);

  @override
  _i5.Future<_i2.ChartDto> fetchExpensesChart(
    String? uid,
    String? accountId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchExpensesChart,
          [
            uid,
            accountId,
          ],
        ),
        returnValue: _i5.Future<_i2.ChartDto>.value(_FakeChartDto_0(
          this,
          Invocation.method(
            #fetchExpensesChart,
            [
              uid,
              accountId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.ChartDto>.value(_FakeChartDto_0(
          this,
          Invocation.method(
            #fetchExpensesChart,
            [
              uid,
              accountId,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ChartDto>);

  @override
  _i5.Future<_i2.ChartDto> fetchIncomesChart(
    String? uid,
    String? accountId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchIncomesChart,
          [
            uid,
            accountId,
          ],
        ),
        returnValue: _i5.Future<_i2.ChartDto>.value(_FakeChartDto_0(
          this,
          Invocation.method(
            #fetchIncomesChart,
            [
              uid,
              accountId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.ChartDto>.value(_FakeChartDto_0(
          this,
          Invocation.method(
            #fetchIncomesChart,
            [
              uid,
              accountId,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ChartDto>);
}
